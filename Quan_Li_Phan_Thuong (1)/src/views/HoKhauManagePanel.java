/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import controllers.HoKhauController;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.so_ho_khau;

public class HoKhauManagePanel extends javax.swing.JPanel {
    
    private JFrame parentFrame;
    private DefaultTableModel dtm ;
    private List<so_ho_khau> ds_hokhau;
    public HoKhauManagePanel(JFrame parentFrame) throws ClassNotFoundException {
        this.parentFrame = parentFrame;
        initComponents();
        dtm = (DefaultTableModel) tblHoKhau.getModel();
        Load("");
        
    }
    public void Load(String s) throws ClassNotFoundException{
        dtm.setRowCount(0);
        try {
            ds_hokhau = controllers.HoKhauController.get_hokhau(s);
            for (so_ho_khau hokhau : ds_hokhau) {
                dtm.addRow(new Object[]{hokhau.getID(),hokhau.getTenChuHo(),hokhau.getDiaChi()});
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(parentFrame, "Khong the ket noi csdl","Error",JOptionPane.ERROR_MESSAGE);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtfSearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHoKhau = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        btnTimKiem = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        jtfSearch.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jtfSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfSearchActionPerformed(evt);
            }
        });
        add(jtfSearch);
        jtfSearch.setBounds(130, 10, 210, 30);

        jScrollPane1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        tblHoKhau.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        tblHoKhau.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Tên chủ hộ", "Địa chỉ"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHoKhau.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHoKhauMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblHoKhau);

        add(jScrollPane1);
        jScrollPane1.setBounds(0, 50, 855, 420);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("Nhập ID hộ khẩu");
        add(jLabel2);
        jLabel2.setBounds(10, 10, 120, 30);

        btnTimKiem.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });
        add(btnTimKiem);
        btnTimKiem.setBounds(430, 10, 90, 30);
    }// </editor-fold>//GEN-END:initComponents

    private void jtfSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfSearchActionPerformed
        
    }//GEN-LAST:event_jtfSearchActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        try {
            Load(jtfSearch.getText());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(HoKhauManagePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void tblHoKhauMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoKhauMouseClicked
        if (evt.getClickCount() == 2 && !evt.isConsumed()) {
            evt.consume();
            int index = tblHoKhau.getSelectedRow();
            try {        
                HoKhauFrame hokhau = new HoKhauFrame(""+ds_hokhau.get(index).getID()+"",this.parentFrame);
                hokhau.setVisible(true);
                hokhau.setLocationRelativeTo(null);
                hokhau.setResizable(false);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(HoKhauManagePanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_tblHoKhauMouseClicked
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jtfSearch;
    private javax.swing.JTable tblHoKhau;
    // End of variables declaration//GEN-END:variables
}
